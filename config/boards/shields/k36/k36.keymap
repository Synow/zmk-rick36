#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define LT0  4  // left-top row
#define LT1  3
#define LT2  2
#define LT3  1
#define LT4  0
#define RT0  5  // right-top row
#define RT1  6
#define RT2  7
#define RT3  8
#define RT4  9
#define LM0 14  // left-middle row
#define LM1 13
#define LM2 12
#define LM3 11
#define LM4 10
#define RM0 15  // right-middle row
#define RM1 16
#define RM2 17
#define RM3 18
#define RM4 19
#define LB0 24  // left-bottom row
#define LB1 23
#define LB2 22
#define LB3 21
#define LB4 20
#define RB0 25  // right-bottom row
#define RB1 26
#define RB2 27
#define RB3 28
#define RB4 29
#define LH0 32  // left thumb keys
#define LH1 31
#define LH2 30
#define RH0 33  // right thumb keys
#define RH1 34
#define RH2 35

#define HM_TAPPING_TERM_FAST 200
#define HM_TAPPING_TERM 300
#define HM_PRIOR_IDLE 150

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2

#define BASE 0
#define NUM 1
#define SYMB 2
#define NAV 3
#define FUNC 4
#define MUS 5
  
#define U_MOUSE_MOVE_MAX 1600                     /* <--- New max speed setting (default: 600) */
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_X(U_MOUSE_MOVE_MAX)

#define U_MOUSE_SCROLL_MAX 15                    /* <--- New max speed setting (default: 10) */
// #define ZMK_MOUSE_DEFAULT_SCRL_VAL 15                    /* <--- New max speed setting (default: 10) */

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_Y(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_Y(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_X(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_X(U_MOUSE_SCROLL_MAX)

&msc {
  time-to-max-speed-ms = <900>;                 /* <--- How long time until max speed is reached */
};
&mmv {
	time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
};
&lt {
	flavor = "balanced";
	tapping-term-ms = <200>;
	quick-tap-ms = <199>;               
    	//global-quick-tap;  
	//hold-trigger-on-release; 
};

/ {
behaviors {
	hm_l: homerow_mods_left {
	compatible = "zmk,behavior-hold-tap";
	#binding-cells = <2>;
	bindings = <&kp>,  <&kp>;
		flavor = "balanced";
		tapping-term-ms = <HM_TAPPING_TERM_FAST>;
		// tapping-term-ms = <HM_TAPPING_TERM>;
		quick-tap-ms = <199>;               
		// require-prior-idle-ms = <HM_PRIOR_IDLE>;
		// hold-trigger-key-positions = <KEYS_R KEYS_T>;
		hold-trigger-on-release;
	};

	hm_r: homerow_mods_right {
		compatible = "zmk,behavior-hold-tap";
		#binding-cells = <2>;
		bindings = <&kp>, <&kp>;
		flavor = "balanced";
		tapping-term-ms = <HM_TAPPING_TERM_FAST>;
		// tapping-term-ms = <HM_TAPPING_TERM>;
		quick-tap-ms = <199>;               
		// require-prior-idle-ms = <HM_PRIOR_IDLE>;
		// hold-trigger-key-positions = <KEYS_L KEYS_T>;
		hold-trigger-on-release;
	};

	hm_shift_l: hm_shift_l {
		compatible = "zmk,behavior-hold-tap";
		#binding-cells = <2>;
		bindings = <&kp>, <&kp>;
		flavor = "balanced";
		tapping-term-ms = <HM_TAPPING_TERM_FAST>;
		quick-tap-ms = <199>;               
		require-prior-idle-ms = <HM_PRIOR_IDLE>;
		hold-trigger-key-positions = <KEYS_R KEYS_T>;
		// hold-trigger-on-release;
	};

	hm_shift_r: hm_shift_r {
		compatible = "zmk,behavior-hold-tap";
		#binding-cells = <2>;
		bindings = <&kp>, <&kp>;
		flavor = "balanced";
		tapping-term-ms = <HM_TAPPING_TERM_FAST>;
		quick-tap-ms = <199>;
		require-prior-idle-ms = <HM_PRIOR_IDLE>;
		hold-trigger-key-positions = <KEYS_L KEYS_T>;
		// hold-trigger-on-release;
	};

	hm: homerow_mods {
		compatible = "zmk,behavior-hold-tap";
		label = "HOMEROW_MODS";
		#binding-cells = <2>;
		flavor = "balanced";
		tapping-term-ms = <200>;
		quick-tap-ms = <199>;               
    		global-quick-tap;        
		bindings = <&kp>, <&kp>;
		hold-trigger-on-release; 
	};
  };

    macros {
        personal_email: personal_email {
            label = "ZM_personal_email";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
	    wait-ms = <1>;
            bindings = <
                &kp S &kp I &kp V &kp A &kp N
                &kp H &kp E &kp L &kp P &kp H
                &kp E &kp R
                &kp AT
                &kp G &kp M &kp A &kp I &kp L
                &kp DOT
                &kp C &kp O &kp M
            >;
        };
        work_email: work_email {
            label = "ZM_work_email";
            compatible = "zmk,behavior-macro";
	    wait-ms = <1>;
            #binding-cells = <0>;
            bindings = <
                &kp S &kp I &kp V &kp A &kp N
                &kp AT
                &kp S &kp P &kp I &kp R &kp I &kp T &kp T
                &kp DOT
                &kp I &kp O
            >;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	  &kp Q            &kp W          &kp E           &kp R           &kp T              &kp Y          &kp U            &kp I            &kp O          &kp P   
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
      &hm_l LCTRL A      &hm_l LALT S  &hm_shift_l LSHIFT D &hm_l LGUI F      &kp G               &kp H          &hm_r LGUI J &hm_shift_r RSHIFT K     &hm_r LALT L     &hm_r LCTRL SEMI
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	  &hm_l LSHIFT Z     &kp X         &kp C     &hm LG(LS(LALT)) V     &kp B              &kp N          &hm LG(LS(LALT)) M  &kp COMMA      &kp DOT        &hm_r RSHIFT FSLH
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
	                                   &lt NUM ESC   &lt SYMB SPC     &lt NAV TAB     &lt FUNC RET   &lt SYMB BSPC    &lt MUS DEL
//                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
>;
		};

		num_layer {
			bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
       &kp LC(LG(Q))   &none           &none          &none           &none                &kp LBKT        &kp N7         &kp N8          &kp N9          &kp EQUAL
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
       &kp LCTRL       &kp LALT        &work_email    &personal_email &none                &kp MINUS       &kp N4         &kp N5          &kp N6          &kp COLON
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
       &none           &none           &none          &none           &none                &kp GRAVE       &kp N1         &kp N2          &kp N3          &kp KP_DOT 
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
	                                   &kp ESC        &kp SPC       &kp TAB            &kp RET         &kp BSPC       &kp N0
//                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
>;
		};

		symb_layer {
			bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	   &kp GRAVE       &kp AT          &kp HASH        &kp DOLLAR      &kp PRCNT          &none           &kp ASTRK         &kp LBKT        &kp RBKT       &kp KP_EQUAL
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	   &kp TILDE       &kp CARET       &kp PIPE        &kp EXCL        &none              &kp UNDER       &kp MINUS         &kp LPAR        &kp RPAR       &kp SQT       
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	   &none           &none           &none           &kp PLUS        &none              &kp AMPS        &kp DOUBLE_QUOTES &kp LBRC        &kp RBRC       &kp BACKSLASH         
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
	                                   &kp ESC         &kp SPC        &kp TAB             &kp RET         &caps_word        &kp DEL
//                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
>;
		};

		nav_layer {
			bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	&bt BT_CLR           &none           &none           &none           &none              &none         &none            &none           &none         &none  
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	&kp LG(A)         &kp LALT        &kp LSHIFT      &kp LGUI        &none              &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT      &kp CAPSLOCK
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	&kp LG(Z)         &kp LG(X)       &kp LG(C)       &kp LG(V)       &none              &kp LG(LEFT)        &kp PG_DN    &kp PG_UP     &kp LG(RIGHT)   &kp INSERT
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
	                                   &kp ESC          &kp SPC       &kp TAB              &kp RET         &kp BSPC        &kp DEL
//                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
>;
		};

		func_layer {
			bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	   &kp F8           &kp F9           &kp F10        &kp F11       &kp F12               &none         &none           &none           &none           &none
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	   &kp F1           &kp F2           &kp F3         &kp F4        &kp F5                &kp C_PREV    &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT      &none
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	   &none            &none            &none          &kp F6        &kp F7                &none         &kp C_PLAY_PAUSE &kp K_MUTE      &none           &none
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
      	                                &kp ESC         &kp SPC       &kp TAB               &kp RET       &kp BSPC        &kp DEL
//                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
>;
		};

		mus_layer {
			bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	    &none           &none           &mmv MOVE_UP    &none           &none              &none         &none            &none           &none         &none  
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	    &none           &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT &none              &none         &mkp LCLK        &mkp RCLK       &none         &none  
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	    &none           &none           &none           &none           &none              &none         &msc SCRL_DOWN  &msc SCRL_UP  &none         &none  
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
      	                                &kp ESC         &kp SPC       &kp TAB               &kp RET       &kp BSPC        &kp DEL
//                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
>;
		};
	};
};
